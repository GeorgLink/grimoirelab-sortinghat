// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IndividualsTable Mock query for deleteIdentity 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      <v-icon-stub
        color="primary"
        left=""
      >
        
        mdi-account-multiple
      
      </v-icon-stub>
      
      Individuals
    
    </h4>
     
    <div>
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Merge selected
        </span>
      </v-tooltip-stub>
       
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Delete selected
        </span>
      </v-tooltip-stub>
       
      <v-btn-stub
        activeclass=""
        class="primary--text"
        color="blue lighten-5"
        depressed="true"
        tag="button"
        type="button"
      >
        
        Add
      
      </v-btn-stub>
    </div>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="uuid"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="7"
      value="0"
    />
  </div>
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
   
  <profile-modal-stub
    addidentity="() => {}"
    enroll="() => {}"
    getcountries="() => {}"
    updateprofile="() => {}"
  />
   
  <v-card-stub
    class="dragged-item"
    color="primary"
    dark="true"
    loaderheight="4"
    tag="div"
  >
    <v-card-title-stub>
      
      Moving 0
    
    </v-card-title-stub>
  </v-card-stub>
</v-container-stub>
`;

exports[`IndividualsTable Mock query for merge 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      <v-icon-stub
        color="primary"
        left=""
      >
        
        mdi-account-multiple
      
      </v-icon-stub>
      
      Individuals
    
    </h4>
     
    <div>
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Merge selected
        </span>
      </v-tooltip-stub>
       
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Delete selected
        </span>
      </v-tooltip-stub>
       
      <v-btn-stub
        activeclass=""
        class="primary--text"
        color="blue lighten-5"
        depressed="true"
        tag="button"
        type="button"
      >
        
        Add
      
      </v-btn-stub>
    </div>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="uuid"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="7"
      value="0"
    />
  </div>
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
   
  <profile-modal-stub
    addidentity="() => {}"
    enroll="() => {}"
    getcountries="() => {}"
    updateprofile="() => {}"
  />
   
  <v-card-stub
    class="dragged-item"
    color="primary"
    dark="true"
    loaderheight="4"
    tag="div"
  >
    <v-card-title-stub>
      
      Moving 0
    
    </v-card-title-stub>
  </v-card-stub>
</v-container-stub>
`;

exports[`IndividualsTable Mock query for moveIdentity 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      <v-icon-stub
        color="primary"
        left=""
      >
        
        mdi-account-multiple
      
      </v-icon-stub>
      
      Individuals
    
    </h4>
     
    <div>
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Merge selected
        </span>
      </v-tooltip-stub>
       
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Delete selected
        </span>
      </v-tooltip-stub>
       
      <v-btn-stub
        activeclass=""
        class="primary--text"
        color="blue lighten-5"
        depressed="true"
        tag="button"
        type="button"
      >
        
        Add
      
      </v-btn-stub>
    </div>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="uuid"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="7"
      value="0"
    />
  </div>
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
   
  <profile-modal-stub
    addidentity="() => {}"
    enroll="() => {}"
    getcountries="() => {}"
    updateprofile="() => {}"
  />
   
  <v-card-stub
    class="dragged-item"
    color="primary"
    dark="true"
    loaderheight="4"
    tag="div"
  >
    <v-card-title-stub>
      
      Moving 0
    
    </v-card-title-stub>
  </v-card-stub>
</v-container-stub>
`;

exports[`IndividualsTable Mock query for unmerge 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      <v-icon-stub
        color="primary"
        left=""
      >
        
        mdi-account-multiple
      
      </v-icon-stub>
      
      Individuals
    
    </h4>
     
    <div>
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Merge selected
        </span>
      </v-tooltip-stub>
       
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Delete selected
        </span>
      </v-tooltip-stub>
       
      <v-btn-stub
        activeclass=""
        class="primary--text"
        color="blue lighten-5"
        depressed="true"
        tag="button"
        type="button"
      >
        
        Add
      
      </v-btn-stub>
    </div>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="uuid"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="7"
      value="0"
    />
  </div>
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
   
  <profile-modal-stub
    addidentity="() => {}"
    enroll="() => {}"
    getcountries="() => {}"
    updateprofile="() => {}"
  />
   
  <v-card-stub
    class="dragged-item"
    color="primary"
    dark="true"
    loaderheight="4"
    tag="div"
  >
    <v-card-title-stub>
      
      Moving 0
    
    </v-card-title-stub>
  </v-card-stub>
</v-container-stub>
`;

exports[`OrganizationsTable Mock mutation for addDomain 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      <v-icon-stub
        color="primary"
        left=""
      >
        
        mdi-sitemap
      
      </v-icon-stub>
      
      Organizations
    
    </h4>
     
    <v-btn-stub
      activeclass=""
      class="primary--text"
      color="blue lighten-5"
      depressed="true"
      tag="button"
      type="button"
    >
      
      Add
    
    </v-btn-stub>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="id"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="5"
      value="0"
    />
  </div>
   
  <organization-modal-stub
    adddomain="function mockConstructor() {
        return fn.apply(this, arguments);
      }"
    addorganization="() => {}"
    deletedomain="() => {}"
    domains=""
  />
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
   
  <v-snackbar-stub
    timeout="6000"
  >
    
    
  
  </v-snackbar-stub>
</v-container-stub>
`;

exports[`OrganizationsTable Mock mutation for addOrganization 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      <v-icon-stub
        color="primary"
        left=""
      >
        
        mdi-sitemap
      
      </v-icon-stub>
      
      Organizations
    
    </h4>
     
    <v-btn-stub
      activeclass=""
      class="primary--text"
      color="blue lighten-5"
      depressed="true"
      tag="button"
      type="button"
    >
      
      Add
    
    </v-btn-stub>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="id"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="5"
      value="0"
    />
  </div>
   
  <organization-modal-stub
    adddomain="() => {}"
    addorganization="function mockConstructor() {
        return fn.apply(this, arguments);
      }"
    deletedomain="() => {}"
    domains=""
  />
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
   
  <v-snackbar-stub
    timeout="6000"
  >
    
    
  
  </v-snackbar-stub>
</v-container-stub>
`;

exports[`OrganizationsTable Mock mutation for deleteDomain 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      <v-icon-stub
        color="primary"
        left=""
      >
        
        mdi-sitemap
      
      </v-icon-stub>
      
      Organizations
    
    </h4>
     
    <v-btn-stub
      activeclass=""
      class="primary--text"
      color="blue lighten-5"
      depressed="true"
      tag="button"
      type="button"
    >
      
      Add
    
    </v-btn-stub>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="id"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="5"
      value="0"
    />
  </div>
   
  <organization-modal-stub
    adddomain="() => {}"
    addorganization="() => {}"
    deletedomain="function mockConstructor() {
        return fn.apply(this, arguments);
      }"
    domains=""
  />
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
   
  <v-snackbar-stub
    timeout="6000"
  >
    
    
  
  </v-snackbar-stub>
</v-container-stub>
`;

exports[`OrganizationsTable Mock mutation for enroll 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      <v-icon-stub
        color="primary"
        left=""
      >
        
        mdi-sitemap
      
      </v-icon-stub>
      
      Organizations
    
    </h4>
     
    <v-btn-stub
      activeclass=""
      class="primary--text"
      color="blue lighten-5"
      depressed="true"
      tag="button"
      type="button"
    >
      
      Add
    
    </v-btn-stub>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="id"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="5"
      value="0"
    />
  </div>
   
  <organization-modal-stub
    adddomain="() => {}"
    addorganization="() => {}"
    deletedomain="() => {}"
    domains=""
  />
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
   
  <v-snackbar-stub
    timeout="6000"
  >
    
    
  
  </v-snackbar-stub>
</v-container-stub>
`;

exports[`ProfileModal Mock mutation for addIdentity 1`] = `
<v-dialog-stub
  closedelay="0"
  contentclass=""
  maxwidth="650"
  opendelay="0"
  origin="center center"
  persistent="true"
  retainfocus="true"
  transition="dialog-transition"
  width="auto"
>
  <v-card-stub
    class="pa-6"
    loaderheight="4"
    tag="div"
  >
    <v-card-title-stub>
      <span
        class="headline"
      >
        Add individual
      </span>
    </v-card-title-stub>
     
    <v-card-text-stub>
      <v-form-stub>
        <v-row-stub
          tag="div"
        >
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Name"
              loaderheight="2"
              messages=""
              rules=""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
           
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Email"
              loaderheight="2"
              messages=""
              rules="value => (value ? /\\\\S+@\\\\S+\\\\.\\\\S+/.test(value) : true) || \\"Invalid email\\""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
        </v-row-stub>
         
        <v-row-stub
          tag="div"
        >
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Username"
              loaderheight="2"
              messages=""
              rules=""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
           
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Source"
              loaderheight="2"
              messages=""
              rules="value => !!value || \\"Required\\""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
        </v-row-stub>
         
        <v-row-stub
          tag="div"
        >
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Gender"
              loaderheight="2"
              messages=""
              rules=""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
           
          <v-col-stub
            cols="4"
            tag="div"
          >
            <v-combobox-stub
              allowoverflow="true"
              appendicon="$dropdown"
              backgroundcolor=""
              clearicon="$clear"
              delimiters=""
              errorcount="1"
              errormessages=""
              filled="true"
              filter="function _default(item, queryText, itemText) {
                return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
              }"
              itemcolor="primary"
              itemdisabled="disabled"
              items=""
              itemtext="name"
              itemvalue="value"
              label="Country"
              loaderheight="2"
              menuprops="[object Object]"
              messages=""
              nodatatext="$vuetify.noDataText"
              returnobject="true"
              rules=""
              successmessages=""
              type="text"
              valuecomparator="function deepEqual(a, b) {
          if (a === b) return true;

          if (a instanceof Date && b instanceof Date) {
            // If the values are Date, they were convert to timestamp with getTime and compare it
            if (a.getTime() !== b.getTime()) return false;
          }

          if (a !== Object(a) || b !== Object(b)) {
            // If the values aren't objects, they were already checked for equality
            return false;
          }

          var props = Object.keys(a);

          if (props.length !== Object.keys(b).length) {
            // Different number of props, don't bother to check
            return false;
          }

          return props.every(function (p) {
            return deepEqual(a[p], b[p]);
          });
        }"
            />
          </v-col-stub>
           
          <v-col-stub
            cols="2"
            tag="div"
          >
            <v-checkbox-stub
              backgroundcolor=""
              color="primary"
              errorcount="1"
              errormessages=""
              indeterminateicon="$checkboxIndeterminate"
              label="Bot"
              messages=""
              officon="$checkboxOff"
              onicon="$checkboxOn"
              ripple="true"
              rules=""
              successmessages=""
              valuecomparator="function deepEqual(a, b) {
          if (a === b) return true;

          if (a instanceof Date && b instanceof Date) {
            // If the values are Date, they were convert to timestamp with getTime and compare it
            if (a.getTime() !== b.getTime()) return false;
          }

          if (a !== Object(a) || b !== Object(b)) {
            // If the values aren't objects, they were already checked for equality
            return false;
          }

          var props = Object.keys(a);

          if (props.length !== Object.keys(b).length) {
            // Different number of props, don't bother to check
            return false;
          }

          return props.every(function (p) {
            return deepEqual(a[p], b[p]);
          });
        }"
            />
          </v-col-stub>
        </v-row-stub>
      </v-form-stub>
       
      <v-row-stub
        class="pl-4"
        tag="div"
      >
        <span
          class="title font-weight-regular pl-16"
        >
          Organizations
        </span>
      </v-row-stub>
       
      <v-row-stub
        tag="div"
      >
        <v-col-stub
          cols="4"
          tag="div"
        >
          <v-text-field-stub
            backgroundcolor=""
            clearicon="$clear"
            errorcount="1"
            errormessages=""
            filled="true"
            label="Organization"
            loaderheight="2"
            messages=""
            rules=""
            successmessages=""
            type="text"
            value=""
          />
        </v-col-stub>
         
        <v-col-stub
          cols="3"
          tag="div"
        >
          <v-menu-stub
            closedelay="0"
            closeonclick="true"
            contentclass=""
            maxheight="auto"
            maxwidth="auto"
            minwidth="290px"
            nudgebottom="0"
            nudgeleft="0"
            nudgeright="0"
            nudgetop="0"
            nudgewidth="0"
            offsety="true"
            opendelay="0"
            openonclick="true"
            origin="top left"
            transition="scale-transition"
          >
             
            <v-date-picker-stub
              eventcolor="warning"
              firstdayofweek="0"
              localefirstdayofyear="0"
              nexticon="$next"
              notitle="true"
              previcon="$prev"
              scrollable="true"
              selecteditemstext="$vuetify.datePicker.itemsSelected"
              showcurrent="true"
              type="date"
              value=""
              width="290"
            />
          </v-menu-stub>
        </v-col-stub>
         
        <v-col-stub
          cols="3"
          tag="div"
        >
          <v-menu-stub
            closedelay="0"
            closeonclick="true"
            contentclass=""
            maxheight="auto"
            maxwidth="auto"
            minwidth="290px"
            nudgebottom="0"
            nudgeleft="0"
            nudgeright="0"
            nudgetop="0"
            nudgewidth="0"
            offsety="true"
            opendelay="0"
            openonclick="true"
            origin="top left"
            transition="scale-transition"
          >
             
            <v-date-picker-stub
              eventcolor="warning"
              firstdayofweek="0"
              localefirstdayofyear="0"
              min=""
              nexticon="$next"
              notitle="true"
              previcon="$prev"
              scrollable="true"
              selecteditemstext="$vuetify.datePicker.itemsSelected"
              showcurrent="true"
              type="date"
              value=""
              width="290"
            />
          </v-menu-stub>
        </v-col-stub>
         
        <v-col-stub
          class="pt-6"
          cols="1"
          tag="div"
        >
          <v-btn-stub
            activeclass=""
            color="primary"
            icon="true"
            tag="button"
            type="button"
          >
            <v-icon-stub
              color="primary"
            >
              mdi-plus-circle-outline
            </v-icon-stub>
          </v-btn-stub>
        </v-col-stub>
      </v-row-stub>
    </v-card-text-stub>
     
    <!---->
     
    <v-card-actions-stub>
      <v-spacer-stub />
       
      <v-btn-stub
        activeclass=""
        color="blue darken-1"
        tag="button"
        text="true"
        type="button"
      >
        
        Cancel
      
      </v-btn-stub>
       
      <v-btn-stub
        activeclass=""
        color="primary"
        depressed="true"
        disabled="true"
        tag="button"
        type="button"
      >
        
        Save
      
      </v-btn-stub>
    </v-card-actions-stub>
  </v-card-stub>
</v-dialog-stub>
`;

exports[`ProfileModal Mock mutation for updateProfile 1`] = `
<v-dialog-stub
  closedelay="0"
  contentclass=""
  maxwidth="650"
  opendelay="0"
  origin="center center"
  persistent="true"
  retainfocus="true"
  transition="dialog-transition"
  width="auto"
>
  <v-card-stub
    class="pa-6"
    loaderheight="4"
    tag="div"
  >
    <v-card-title-stub>
      <span
        class="headline"
      >
        Add individual
      </span>
    </v-card-title-stub>
     
    <v-card-text-stub>
      <v-form-stub>
        <v-row-stub
          tag="div"
        >
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Name"
              loaderheight="2"
              messages=""
              rules=""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
           
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Email"
              loaderheight="2"
              messages=""
              rules="value => (value ? /\\\\S+@\\\\S+\\\\.\\\\S+/.test(value) : true) || \\"Invalid email\\""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
        </v-row-stub>
         
        <v-row-stub
          tag="div"
        >
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Username"
              loaderheight="2"
              messages=""
              rules=""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
           
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Source"
              loaderheight="2"
              messages=""
              rules="value => !!value || \\"Required\\""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
        </v-row-stub>
         
        <v-row-stub
          tag="div"
        >
          <v-col-stub
            cols="6"
            tag="div"
          >
            <v-text-field-stub
              backgroundcolor=""
              clearicon="$clear"
              errorcount="1"
              errormessages=""
              filled="true"
              label="Gender"
              loaderheight="2"
              messages=""
              rules=""
              successmessages=""
              type="text"
              value=""
            />
          </v-col-stub>
           
          <v-col-stub
            cols="4"
            tag="div"
          >
            <v-combobox-stub
              allowoverflow="true"
              appendicon="$dropdown"
              backgroundcolor=""
              clearicon="$clear"
              delimiters=""
              errorcount="1"
              errormessages=""
              filled="true"
              filter="function _default(item, queryText, itemText) {
                return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
              }"
              itemcolor="primary"
              itemdisabled="disabled"
              items=""
              itemtext="name"
              itemvalue="value"
              label="Country"
              loaderheight="2"
              menuprops="[object Object]"
              messages=""
              nodatatext="$vuetify.noDataText"
              returnobject="true"
              rules=""
              successmessages=""
              type="text"
              valuecomparator="function deepEqual(a, b) {
          if (a === b) return true;

          if (a instanceof Date && b instanceof Date) {
            // If the values are Date, they were convert to timestamp with getTime and compare it
            if (a.getTime() !== b.getTime()) return false;
          }

          if (a !== Object(a) || b !== Object(b)) {
            // If the values aren't objects, they were already checked for equality
            return false;
          }

          var props = Object.keys(a);

          if (props.length !== Object.keys(b).length) {
            // Different number of props, don't bother to check
            return false;
          }

          return props.every(function (p) {
            return deepEqual(a[p], b[p]);
          });
        }"
            />
          </v-col-stub>
           
          <v-col-stub
            cols="2"
            tag="div"
          >
            <v-checkbox-stub
              backgroundcolor=""
              color="primary"
              errorcount="1"
              errormessages=""
              indeterminateicon="$checkboxIndeterminate"
              label="Bot"
              messages=""
              officon="$checkboxOff"
              onicon="$checkboxOn"
              ripple="true"
              rules=""
              successmessages=""
              valuecomparator="function deepEqual(a, b) {
          if (a === b) return true;

          if (a instanceof Date && b instanceof Date) {
            // If the values are Date, they were convert to timestamp with getTime and compare it
            if (a.getTime() !== b.getTime()) return false;
          }

          if (a !== Object(a) || b !== Object(b)) {
            // If the values aren't objects, they were already checked for equality
            return false;
          }

          var props = Object.keys(a);

          if (props.length !== Object.keys(b).length) {
            // Different number of props, don't bother to check
            return false;
          }

          return props.every(function (p) {
            return deepEqual(a[p], b[p]);
          });
        }"
            />
          </v-col-stub>
        </v-row-stub>
      </v-form-stub>
       
      <v-row-stub
        class="pl-4"
        tag="div"
      >
        <span
          class="title font-weight-regular pl-16"
        >
          Organizations
        </span>
      </v-row-stub>
       
      <v-row-stub
        tag="div"
      >
        <v-col-stub
          cols="4"
          tag="div"
        >
          <v-text-field-stub
            backgroundcolor=""
            clearicon="$clear"
            errorcount="1"
            errormessages=""
            filled="true"
            label="Organization"
            loaderheight="2"
            messages=""
            rules=""
            successmessages=""
            type="text"
            value=""
          />
        </v-col-stub>
         
        <v-col-stub
          cols="3"
          tag="div"
        >
          <v-menu-stub
            closedelay="0"
            closeonclick="true"
            contentclass=""
            maxheight="auto"
            maxwidth="auto"
            minwidth="290px"
            nudgebottom="0"
            nudgeleft="0"
            nudgeright="0"
            nudgetop="0"
            nudgewidth="0"
            offsety="true"
            opendelay="0"
            openonclick="true"
            origin="top left"
            transition="scale-transition"
          >
             
            <v-date-picker-stub
              eventcolor="warning"
              firstdayofweek="0"
              localefirstdayofyear="0"
              nexticon="$next"
              notitle="true"
              previcon="$prev"
              scrollable="true"
              selecteditemstext="$vuetify.datePicker.itemsSelected"
              showcurrent="true"
              type="date"
              value=""
              width="290"
            />
          </v-menu-stub>
        </v-col-stub>
         
        <v-col-stub
          cols="3"
          tag="div"
        >
          <v-menu-stub
            closedelay="0"
            closeonclick="true"
            contentclass=""
            maxheight="auto"
            maxwidth="auto"
            minwidth="290px"
            nudgebottom="0"
            nudgeleft="0"
            nudgeright="0"
            nudgetop="0"
            nudgewidth="0"
            offsety="true"
            opendelay="0"
            openonclick="true"
            origin="top left"
            transition="scale-transition"
          >
             
            <v-date-picker-stub
              eventcolor="warning"
              firstdayofweek="0"
              localefirstdayofyear="0"
              min=""
              nexticon="$next"
              notitle="true"
              previcon="$prev"
              scrollable="true"
              selecteditemstext="$vuetify.datePicker.itemsSelected"
              showcurrent="true"
              type="date"
              value=""
              width="290"
            />
          </v-menu-stub>
        </v-col-stub>
         
        <v-col-stub
          class="pt-6"
          cols="1"
          tag="div"
        >
          <v-btn-stub
            activeclass=""
            color="primary"
            icon="true"
            tag="button"
            type="button"
          >
            <v-icon-stub
              color="primary"
            >
              mdi-plus-circle-outline
            </v-icon-stub>
          </v-btn-stub>
        </v-col-stub>
      </v-row-stub>
    </v-card-text-stub>
     
    <!---->
     
    <v-card-actions-stub>
      <v-spacer-stub />
       
      <v-btn-stub
        activeclass=""
        color="blue darken-1"
        tag="button"
        text="true"
        type="button"
      >
        
        Cancel
      
      </v-btn-stub>
       
      <v-btn-stub
        activeclass=""
        color="primary"
        depressed="true"
        disabled="true"
        tag="button"
        type="button"
      >
        
        Save
      
      </v-btn-stub>
    </v-card-actions-stub>
  </v-card-stub>
</v-dialog-stub>
`;
