// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IndividualsData mock query for getIndividuals 1`] = `
<individualsgrid-stub
  class="grid"
  individuals="[object Object]"
/>
`;

exports[`IndividualsTable Mock query for getPaginatedIndividuals 1`] = `
<v-container-stub
  tag="div"
>
  <v-row-stub
    class="actions"
    tag="div"
  >
    <h4
      class="title"
    >
      Individuals
    </h4>
     
    <div>
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Merge selected
        </span>
      </v-tooltip-stub>
       
      <v-tooltip-stub
        bottom="true"
        closedelay="0"
        contentclass=""
        fixed="true"
        maxwidth="auto"
        nudgebottom="0"
        nudgeleft="0"
        nudgeright="0"
        nudgetop="0"
        nudgewidth="0"
        opendelay="200"
        openonhover="true"
        tag="span"
        transition="expand-y-transition"
      >
         
        <span>
          Delete selected
        </span>
      </v-tooltip-stub>
    </div>
  </v-row-stub>
   
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object],[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="uuid"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="7"
      value="0"
    />
  </div>
   
  <v-dialog-stub
    closedelay="0"
    contentclass=""
    maxwidth="400"
    opendelay="0"
    origin="center center"
    retainfocus="true"
    transition="dialog-transition"
    width="auto"
  >
    <v-card-stub
      loaderheight="4"
      tag="div"
    >
      <v-card-title-stub
        class="headline"
      >
        
      </v-card-title-stub>
       
      <v-card-text-stub>
        
      </v-card-text-stub>
       
      <v-card-actions-stub>
        <v-spacer-stub />
         
        <v-btn-stub
          activeclass=""
          tag="button"
          text="true"
          type="button"
        >
          
          Cancel
        
        </v-btn-stub>
         
        <v-btn-stub
          activeclass=""
          color="blue darken-4"
          tag="button"
          text="true"
          type="button"
        >
          
          Confirm
        
        </v-btn-stub>
      </v-card-actions-stub>
    </v-card-stub>
  </v-dialog-stub>
</v-container-stub>
`;

exports[`OrganizationsTable Mock query for getPaginatedOrganizations 1`] = `
<v-container-stub
  tag="div"
>
  <v-data-table-stub
    customfilter="function defaultFilter(value, search, item) {
          return value != null && search != null && typeof value !== 'boolean' && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
        }"
    customgroup="function groupItems(items, groupBy, groupDesc) {
          var key = groupBy[0];
          var groups = [];
          var current = null;

          for (var i = 0; i < items.length; i++) {
            var item = items[i];
            var val = getObjectValueByPath(item, key);

            if (current !== val) {
              current = val;
              groups.push({
                name: val,
                items: []
              });
            }

            groups[groups.length - 1].items.push(item);
          }

          return groups;
        }"
    customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
          if (sortBy === null || !sortBy.length) return items;
          var stringCollator = new Intl.Collator(locale, {
            sensitivity: 'accent',
            usage: 'sort'
          });
          return items.sort(function (a, b) {
            var _a, _b;

            for (var i = 0; i < sortBy.length; i++) {
              var sortKey = sortBy[i];
              var sortA = getObjectValueByPath(a, sortKey);
              var sortB = getObjectValueByPath(b, sortKey);

              if (sortDesc[i]) {
                _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
              }

              if (customSorters && customSorters[sortKey]) {
                var customResult = customSorters[sortKey](sortA, sortB);
                if (!customResult) continue;
                return customResult;
              } // Check if both cannot be evaluated


              if (sortA === null && sortB === null) {
                continue;
              }

              _b = __read([sortA, sortB].map(function (s) {
                return (s || '').toString().toLocaleLowerCase();
              }), 2), sortA = _b[0], sortB = _b[1];

              if (sortA !== sortB) {
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
              }
            }

            return 0;
          });
        }"
    expanded=""
    expandicon="$expand"
    groupby=""
    groupdesc=""
    headers="[object Object],[object Object]"
    hidedefaultfooter="true"
    hidedefaultheader="true"
    itemkey="id"
    items=""
    itemsperpage="10"
    loadingtext="$vuetify.dataIterator.loadingText"
    locale="en-US"
    mobilebreakpoint="600"
    nodatatext="$vuetify.noDataText"
    noresultstext="$vuetify.dataIterator.noResultsText"
    options="[object Object]"
    page="0"
    selectablekey="isSelectable"
    serveritemslength="-1"
    sortby=""
    sortdesc=""
    value=""
  />
   
  <div
    class="text-center pt-2"
  >
    <v-pagination-stub
      length="0"
      nexticon="$next"
      previcon="$prev"
      totalvisible="5"
      value="0"
    />
  </div>
</v-container-stub>
`;
